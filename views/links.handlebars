<!--this is the view for the body--> 
 <section id="gigs" class="container">
    <h1>All Links</h1> <button class="btn-pri right" onclick="checkAllLinks()">Check All</button> <p>Total Links: {{totalRows}}</p>
    {{#each links }}
    <div class="gig" >
      <ul class="linkses">
        <li>{{type}}</li>
        <li><a rel="noreferrer" href="{{source}}" target="_blank">{{source}}</a></li>
        <li><a rel="noreferrer" href="{{destination}}" target="_blank">{{destination}}</a></li>
        <li><input type="hidden" name="id" value="{{{this.id}}}"></li>
        <li><input type="hidden" name="destination" value="{{{fix this.destination}}}"></li>
        <li><input type="hidden" name="index" value="{{{@index}}}"></li>
        <li>{{size}}</li>
        <li>{{altText}}</li>
        <li>{{anchor}}</li>
        <li>{{statusCode}}</li>
        <li>{{status}}</li>
        <li>{{follow}} </li>
        <button type="submit" onclick="check('{{{this.id}}}', '{{{fix this.destination}}}', '{{{@index}}}')" class="btn checkButton">Check</button>
      </ul>  
    </div>
    {{else}}
        <p>No links availabe</p>
    {{/each}}
  </section>
<!--javascript--> 
<script>
var rowDetails = [] 
//this method will pull the values needed to check and update the link and add them to an array for further use

window.addEventListener('load', (event)=>{
function getValues(){
var allids = document.querySelectorAll('input[name=id]')
var allDestinations = document.querySelectorAll('input[name=destination]')
var allIndex = document.querySelectorAll('input[name=index]')
for(var i=0; i < allids.length; i++){
  var deets = [] 
  deets.push(allids[i].value, allDestinations[i].value, allIndex[i].value)
  rowDetails.push(deets)
  }
}
getValues()
})
//sets await sleep for async functions 
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

async function checkAllLinks(){
   for(var i = 0; i < rowDetails.length; i++){
    var row = rowDetails[i]
    check(row[0], row[1], row[2])
    sleep(1500)
   }
}
//add animations to rows 
 function success(index){ 
    $(`input[value=${index}]`).parents('div').addClass('fix')
  } 
  function failed(index){
    $(`input[value=${index}]`).parents('div').addClass('broke')
  }
  function check(id, destination, index){
    console.log(index)
    $.ajax({
      async: true, 
        url:"/links/check/",
        type: "GET", 
        dataType: "json",
        data: {
            "id": id, 
            "destination": destination, 
            "index": index
        }, 
        complete: function(){
            console.log("process complete")
        },
        success: function(data){
        }, 
        error: function(){
            console.log("error")
        }
    })
  }
</script>   
<script src="/socket.io/socket.io.js"></script>
<script>
  var socket = io.connect('http://localhost:8090')
  
  socket.on('success', function(data){
    alertify.alert(data.message)
    success(data.itemIndex)
  })

  socket.on('success301', function(data){
    alertify.alert(data.message)
    sucess(data.itemIndex)
  })

  socket.on('error', function(data){
    alertify.alert(data.message)
    failed(data.itemIndex)
    console.log(`done ${data.itemIndex}`)
  })

</script>